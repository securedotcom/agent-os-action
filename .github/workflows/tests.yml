name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d  # v5.1.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run linting (pylint)
        if: matrix.python-version == '3.10'
        run: |
          pylint scripts/*.py --rcfile=.pylintrc || true

      - name: Run type checking (mypy)
        if: matrix.python-version == '3.10'
        run: |
          mypy scripts/*.py --config-file=pyproject.toml || true

      - name: Run code formatting check (black)
        if: matrix.python-version == '3.10'
        run: |
          black --check scripts/ tests/ --line-length=120

      - name: Run tests with coverage
        run: |
          pytest -v --cov=scripts --cov-report=term-missing --cov-report=xml --cov-report=html

      - name: Upload coverage to artifacts
        if: matrix.python-version == '3.10'
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874  # v4.4.0
        with:
          name: coverage-report
          path: htmlcov/
          retention-days: 30

      - name: Test Summary
        if: always()
        run: |
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Python Version:** ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332  # v4.1.7

      - name: Set up Python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d  # v5.1.0
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Check code formatting with black
        run: |
          black --check --diff scripts/ tests/ --line-length=120

      - name: Run pylint
        run: |
          pylint scripts/*.py --rcfile=.pylintrc --exit-zero

      - name: Run mypy
        run: |
          mypy scripts/*.py --config-file=pyproject.toml --no-error-summary || true
